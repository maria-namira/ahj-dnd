(()=>{"use strict";class t{constructor(){this.memory={todo:[],progress:[],done:[]},this.drag=null}getId(){const t=Math.floor(1e6*Math.random());return[...this.memory.todo,...this.memory.progress,...this.memory.done].find((e=>e.id===t))?this.getId():t}create(t,e){this.memory[t].push({id:this.getId(),text:e})}read(t,e){return this.memory[e].find((e=>e.id===t))}delete(t,e){const s=this.memory[e].findIndex((e=>e.id===+t));this.memory[e].splice(s,1)}relocate(t,e){e&&[this.memory.todo,this.memory.progress,this.memory.done].forEach((s=>{if(s.find((e=>e.id===+t.dataset.id))){this.drag=s.find((e=>e.id===+t.dataset.id));const o=s.findIndex((t=>t.id===this.drag.id));s.splice(o,1);const n=this.memory[e.column].findIndex((t=>t.id===+e.id));e.id?this.memory[e.column].splice(n,0,this.drag):this.memory[e.column].push(this.drag)}}))}saveState(){localStorage.setItem("memory",JSON.stringify(this.memory))}update(){localStorage.getItem("memory")&&(this.memory=JSON.parse(localStorage.getItem("memory")))}}class e{constructor(){this.data=new t,this.container=null,this.adding=null,this.texarea=null,this.onClick=this.onClick.bind(this)}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUI(){this.container.innerHTML=e.markUp,this.data.update(),this.redrawDOM()}redrawDOM(){document.querySelector('[data-id="111111"]')&&document.querySelector('[data-id="111111"]').remove(),document.querySelector('[data-id="000000"]')&&document.querySelector('[data-id="000000"]').remove(),this.redrawColumn(this.container.querySelector('[data-name="todo"]')),this.redrawColumn(this.container.querySelector('[data-name="progress"]')),this.redrawColumn(this.container.querySelector('[data-name="done"]')),document.body.style.cursor="auto"}toAppoint(){this.container.addEventListener("click",this.onClick)}onClick(t){return"col__add"===t.target.className||"col__addText"===t.target.className?this.onColAddClick(t):"add__cancel"===t.target.className?this.onColAddingCancelClick(t):"add__button"===t.target.className?this.addCard(t):"card__delete"===t.target.className?this.deleteCard(t):"card__subBtn"===t.target.className&&t.target.closest(".col__card").querySelector(".card__subMenu").classList.toggle("d_none")}deleteCard(t){const e=t.target.closest(".col__card").dataset.id,s=t.target.closest(".col__content");this.data.delete(e,s.dataset.name),this.redrawColumn(s),this.data.saveState()}addCard(t){this.textarea=t.target.closest(".col__footer").querySelector(".add__textarea");const e=this.textarea.value,s=t.target.closest(".trello__col").querySelector(".col__content");e&&(this.data.create(s.dataset.name,e),this.redrawColumn(s),this.textarea.value="",this.adding.classList.add("d_none"),this.data.saveState())}redrawColumn(t){this.column=t;const s=t.dataset.name;this.column.innerHTML="",this.data.memory[s].forEach((s=>{this.column.insertAdjacentHTML("beforeend",e.cardMarkUP(s.text,s.id)),this.checkScroll(t)}))}checkScroll(t){this.column=t;const e=this.column.closest(".trello__col").querySelector(".scroll");this.column.offsetHeight>=555?e.classList.remove("d_none"):e.className="scroll d_none"}onColAddingCancelClick(t){this.adding.classList.add("d_none"),this.textarea=t.target.closest(".col__footer").querySelector(".add__textarea"),this.textarea.value=""}onColAddClick(t){[...this.container.querySelectorAll(".col__adding")].forEach((t=>t.classList.add("d_none"))),this.adding=t.target.closest(".col__footer").querySelector(".col__adding"),this.adding.classList.remove("d_none");this.adding.querySelector(".add__textarea").focus()}static cardMarkUP(t,e){return`<div data-id="${e}" class="col__card card">\n    <button class="card__delete">&#10006;</button>\n    <div class="card__text">${t}</div>\n    <button class="card__subBtn"></button>\n    <span class="card__subMenu d_none">\n      <label class="subMenu__item">\n        <button class="like">&#x1F44D;</button>\n        <span class="quantity">1</span>\n      </label>\n      <label class="subMenu__item">\n        <button class="dizlike">&#128078;</button>\n        <span class="quantity">2</span>\n      </label>\n      <label class="subMenu__item">\n        <span class="mes"></span>\n        <span class="quantity">3</span>\n      </label>\n    </span>\n  </div>`}static get markUp(){return'<div class="trello">\n    <div class="trello__body">\n      <div class="trello__content">\n        <div class="trello__col col">\n          <div class="col__header">\n            <h3 class="col__title">TODO</h3>\n            <button class="col__menu"></button>\n          </div>\n          <div data-name="todo" class="col__content"></div>\n          <div class="col__footer">\n            <span class="scroll d_none"></span>\n            <button class="col__add">&#10010; <span class="col__addText">Add another card</span></button>\n            <div class="col__adding add d_none">\n              <textarea class="add__textarea" placeholder="Enter a title for this card..."></textarea>\n              <div class="add__controls">\n                <div class="add__buttons">\n                  <button class="add__button">Add Card</button>\n                  <button class="add__cancel">&#10006;</button>\n                </div>\n                <button class="col__menu"></button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="trello__col col">\n          <div class="col__header">\n            <h3 class="col__title">IN PROGRESS</h3>\n            <button class="col__menu"></button>\n          </div>\n          <div data-name="progress" class="col__content"></div>\n          <div class="col__footer">\n            <span class="scroll d_none"></span>\n            <button class="col__add">&#10010; <span class="col__addText">Add another card</span></button>\n            <div class="col__adding add d_none">\n              <textarea class="add__textarea" placeholder="Enter a title for this card..."></textarea>\n              <div class="add__controls">\n                <div class="add__buttons">\n                  <button class="add__button">Add Card</button>\n                  <button class="add__cancel">&#10006;</button>\n                </div>\n                <button class="col__menu"></button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="trello__col col">\n          <div class="col__header">\n            <h3 class="col__title">DONE</h3>\n            <button class="col__menu"></button>\n          </div>\n          <div data-name="done" class="col__content"></div>\n          <div class="col__footer">\n            <span class="scroll d_none"></span>\n            <button class="col__add">&#10010; <span class="col__addText">Add another card</span></button>\n            <div class="col__adding add d_none">\n              <textarea class="add__textarea" placeholder="Enter a title for this card..."></textarea>\n              <div class="add__controls">\n                <div class="add__buttons">\n                  <button class="add__button">Add Card</button>\n                  <button class="add__cancel">&#10006;</button>\n                </div>\n                <button class="col__menu"></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>'}}const s=new e;s.bindToDOM(document.querySelector(".container")),s.drawUI(),s.toAppoint();const o=new class{constructor(t){this.trello=t,this.container=t.container,this.data=t.data,this.draggedEl=null,this.ghostEl=null,this.shiftX=null,this.shiftY=null,this.id=null,this.clone=null,this.sibling=null,this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this)}toAppoint(){this.container.addEventListener("mousedown",this.onMouseDown),this.container.addEventListener("mouseup",this.onMouseUp),this.container.querySelector(".trello__body").addEventListener("mouseleave",this.onMouseLeave)}onMouseLeave(){this.draggedEl&&(this.draggedEl.classList.remove("darkened"),this.ghostEl.remove(),document.body.style.cursor="auto",this.container.removeEventListener("mousemove",this.onMouseMove))}onMouseUp(t){const e=document.elementFromPoint(t.clientX,t.clientY);this.draggedEl&&!e.closest(".card__delete")&&(this.clone&&(e.closest(".col__content")||e.closest(".col__footer")||e.closest(".col__header"))?this.clone.nextElementSibling?this.sibling={id:this.clone.nextElementSibling.dataset.id,column:this.clone.closest(".col__content").dataset.name}:e.closest(".darkened")&&(e.closest(".col__card").nextElementSibling?this.sibling={id:e.closest(".col__card").nextElementSibling.dataset.id,column:e.closest(".col__content").dataset.name}:this.sibling={id:null,column:e.closest(".col__content").dataset.name}):this.sibling=null,this.container.removeEventListener("mousemove",this.onMouseMove),this.data.relocate(this.draggedEl,this.sibling),this.trello.redrawDOM(),this.trello.data.saveState())}onMouseMove(t){t.preventDefault(),document.querySelector('[data-id="000000"]')&&document.querySelector('[data-id="000000"]').remove(),this.draggedEl&&(this.ghostEl.style.left=t.pageX-this.shiftX+"px",this.ghostEl.style.top=t.pageY-this.shiftY+"px",this.addGhostEl(t))}addGhostEl(t){this.ghostEl.hidden=!0;const e=document.elementFromPoint(t.clientX,t.clientY);if(this.ghostEl.hidden=!1,!e)return;const s=e.closest(".col__card");if(this.clone=this.draggedEl.cloneNode(!0),this.clone.dataset.id="000000",e.closest(".col__content"))if(e.closest(".col__content").hasChildNodes())if(s&&s.dataset.id!==this.id){const{top:o}=e.getBoundingClientRect();s.previousElementSibling&&s.previousElementSibling.dataset.id===this.id&&e.closest(".col__content").insertBefore(this.clone,e.closest(".col__card").nextElementSibling),s.nextElementSibling&&s.nextElementSibling.dataset.id===this.id&&e.closest(".col__content").insertBefore(this.clone,e.closest(".col__card")),t.pageY>window.scrollY+o+e.closest(".col__card").offsetHeight/2?e.closest(".col__content").insertBefore(this.clone,e.closest(".col__card").nextElementSibling):e.closest(".col__content").insertBefore(this.clone,e.closest(".col__card"))}else{const s=document.elementFromPoint(t.clientX,t.clientY+70),o=document.elementFromPoint(t.clientX,t.clientY-50);s.closest(".col__footer")?e.closest(".col__content").appendChild(this.clone):o.closest(".col__header")&&e.closest(".col__content").prepend(this.clone)}else e.closest(".col__content").appendChild(this.clone);e.closest(".col__footer")&&(e.closest(".trello__col").querySelector(".col__content").scrollTop=e.closest(".trello__col").querySelector(".col__content").scrollHeight,e.closest(".trello__col").querySelector(".col__content").appendChild(this.clone)),e.closest(".col__header")&&e.closest(".trello__col").querySelector(".col__content").prepend(this.clone)}onMouseDown(t){t.preventDefault();const{classList:e}=t.target;if(t.target.closest(".col__card")&&!e.contains("card__delete")&&!e.contains("card__subBtn")&&t.target.closest(".col__card")){document.body.style.cursor="grabbing",this.draggedEl=t.target.closest(".col__card"),this.id=this.draggedEl.dataset.id;const e=this.draggedEl.getBoundingClientRect();this.shiftX=t.clientX-e.left,this.shiftY=t.clientY-e.top,this.ghostEl=this.draggedEl.cloneNode(!0),this.ghostEl.classList.add("dragged"),this.ghostEl.dataset.id="111111",this.draggedEl.classList.add("darkened"),document.querySelector(".trello__body").appendChild(this.ghostEl),this.ghostEl.style.width=`${this.draggedEl.offsetWidth}px`,this.ghostEl.style.left=`${e.left}px`,this.ghostEl.style.top=`${e.top}px`,this.container.addEventListener("mousemove",this.onMouseMove)}}}(s);o.toAppoint()})();